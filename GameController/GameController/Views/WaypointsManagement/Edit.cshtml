@model GameControllerData.Models.Waypoint
@{
    ViewData["Title"] = "Edit";
}
<style>
    #map {
        height: 750px;
        width: 100%;
    }
    .row {
        width: 100%;
        float: left;
    }
    .clearfix{
        clear:both
    }
    .marker {
        background-image: url('@Url.Content("~/images/mapbox-icon.png")');
        background-size: cover;
        width: 50px;
        height: 50px;
        border-radius: 50%;
        cursor: pointer;
    }
</style>
<script src='https://api.tiles.mapbox.com/mapbox-gl-js/v1.3.1/mapbox-gl.js'></script>
<link href='https://api.tiles.mapbox.com/mapbox-gl-js/v1.3.1/mapbox-gl.css' rel='stylesheet' />
<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#help" style="float:right;width:12%;clear:both;">Help</button>
<h2>Edit</h2>
<h4>Waypoint</h4>
<hr />
<div class="row">
    <div class="col-6 col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="WaypointID" />
            <div class="form-group">
                <label asp-for="Longitude" class="control-label"></label>
                <input asp-for="Longitude" class="form-control" id="Longitude" />
                <span asp-validation-for="Longitude" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Latitude" class="control-label"></label>
                <input asp-for="Latitude" class="form-control" id="Latitude" />
                <span asp-validation-for="Latitude" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Content" class="control-label"></label>
                @Html.TextAreaFor(model => model.Content, new { @class = "form-control", @rows = 4 })
                <span asp-validation-for="Content" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ChallengeID" class="control-label"></label>
                <select asp-for="ChallengeID" class="form-control" asp-items="ViewBag.ChallengeID"></select>
                <span asp-validation-for="ChallengeID" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="AdventureID" class="control-label"></label>
                <select asp-for="AdventureID" class="form-control" asp-items="ViewBag.AdventureID"></select>
                <span asp-validation-for="AdventureID" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </form>

        <div class="button-div" style="width:30%">
            <a class="button-text" asp-action="Index" asp-route-id=@Model.AdventureID> Back to List</a>
        </div>
    </div>

    <div class="col-6 col-md-8">
        <div id="map">
            <script type="text/javascript">
                //map creation
                mapboxgl.accessToken = 'pk.eyJ1IjoiYmF5dTE2IiwiYSI6ImNrMDZqOWg0djA2bzIzYm12eWR6eWFvdHQifQ.6KPi44pmUpR627TadcHC0g';
                var map = new mapboxgl.Map({
                    container: 'map',
                    style: 'mapbox://styles/mapbox/streets-v11',
                    center: [@Html.DisplayFor(model => model.Longitude),
                             @Html.DisplayFor(model => model.Latitude)],
                    zoom: 16
                });
                var previous_marker = null;
                var geojson = {
                    type: 'FeatureCollection',
                    features: [{
                    type: 'Feature',
                    geometry: {
                    type: 'Point',
                    coordinates: [@Html.DisplayFor(model => model.Longitude),
                             @Html.DisplayFor(model => model.Latitude)]
                    }
                  }]
                };
                geojson.features.forEach(function(marker) {
                    var el = document.createElement('div');
                    el.className = 'marker';
                    var newMarker = new mapboxgl.Marker(el)
                    .setLngLat(marker.geometry.coordinates)
                    .setPopup(new mapboxgl.Popup({ offset: 25 })
                    .setHTML('@Html.DisplayFor(waypoint => waypoint.ChallengeID)'))
                        .addTo(map);
                    previous_marker = newMarker;
                });
            </script>
        </div>
    </div>


</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
<script>
    map.on('click', function (e) {
        document.getElementById('Longitude').value =
            JSON.stringify(e.lngLat.lng);
        document.getElementById('Latitude').value =
            JSON.stringify(e.lngLat.lat);
        if (previous_marker) {
            previous_marker.remove();
        }
        var geojson = {
            type: 'FeatureCollection',
            features: [{
                type: 'Feature',
                geometry: {
                    type: 'Point',
                    coordinates: [JSON.stringify(e.lngLat.lng), JSON.stringify(e.lngLat.lat)]
                }
            }]
        };
        geojson.features.forEach(function (marker) {
            //add team's marker
            var el = document.createElement('div');
            el.className = 'marker';

            var newMarker = new mapboxgl.Marker(el)
                .setLngLat(marker.geometry.coordinates)
                .setPopup(new mapboxgl.Popup({ offset: 25 })
                    .setHTML('HEllo'))
                .addTo(map);

            previous_marker = newMarker;
        });
    });

</script>

<!-- Modal -->
<div class="modal fade" id="help" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Help and Tips</h5>
            </div>
            <div class="modal-body">
                <p>Create a new waypoint here.</p>
                <br>
                <p>
                    Longitude and latitude are set easily by clicking on the desired location on the map.
                    <br>
                    Content is the waypoint text that will be shown to the user on arrival
                    <br>
                    Adventure ID is the adventure the waypoint is associated with
                    <br>
                    ChallengeID is the challenge the waypoint is linked with and must be completed by the teams to go to the next waypoint. If the challengeID is empty the waypoint will have no challenge.
                </p>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>